"""
Week 7 Exercise - Matrix and Image Processing

This script performs the following tasks:
1. Matrix operations and property checks using NumPy.
2. Image analysis using OpenCV and NumPy.

Requirements:
- numpy
- scipy
- opencv-python
"""

import numpy as np
from scipy.optimize import linprog
import cv2

# ----- Matrix Section -----

# Define matrices A, B, and C
A = np.array([[1, -2, 3, 7],
              [2, 1, 1, 4],
              [-3, 2, -2, 10]])

B = np.array([[0, 1, -3, -2],
              [10, -1, 2, -3],
              [5, 1, -1, 4]])

C = np.array([[4, 0, -2, 3],
              [3, 6, 9, 7],
              [2, 2, 5, 1],
              [9, 4, 6, -2]])

# 1. Display dimensions
print("Matrix Dimensions:")
print("A:", A.shape)
print("B:", B.shape)
print("C:", C.shape)

# 2. Matrix operations
print("\nMatrix Operations:")
try:
    print("A + B:\n", A + B)
except ValueError:
    print("A + B: Not defined")

try:
    print("A * B.T:\n", np.matmul(A, B.T))
except ValueError:
    print("A * B: Not defined")

try:
    print("A * C:\n", np.matmul(A, C))
except ValueError:
    print("A * C: Not defined")

print("C Transpose:\n", C.T)

# 3. Transposition properties
print("\nTransposition Properties:")
if A.shape == B.shape:
    print("(A + B).T == A.T + B.T:", np.array_equal((A + B).T, A.T + B.T))
if A.shape[1] == C.shape[0]:
    print("(AC).T == C.T * A.T:", np.array_equal(np.matmul(A, C).T, np.matmul(C.T, A.T)))

# 4. Inverse of C
try:
    C_inv = np.linalg.inv(C)
    print("\nInverse of C:\n", C_inv)
except np.linalg.LinAlgError:
    print("Matrix C is not invertible.")

# ----- Image Section -----

# Load the image
import os
image_path = os.path.join(os.path.dirname(__file__), "week7_image.jpg")

image = cv2.imread(image_path)

if image is not None:
    height, width, channels = image.shape
    print("\nImage Loaded Successfully")
    print("Resolution: {} x {}".format(width, height))
    print("Number of Channels:", channels)

    if channels == 1:
        print("Color Mode: Grayscale")
    elif channels == 3:
        print("Color Mode: RGB")
    elif channels == 4:
        print("Color Mode: RGBA")
    else:
        print("Color Mode: Unknown")
else:
    print("Failed to load image. Ensure 'week7_image.jpg' is in the same folder as this script.")
